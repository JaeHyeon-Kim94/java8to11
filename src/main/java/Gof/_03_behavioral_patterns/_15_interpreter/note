인터프리터

 - 사전적 의미로 번역자, 연주자
 - 한 언어를 다른 언어로 바꿔주거나, 악보를 들을 수 있는 음악으로 바꾸는 사람들.

 - 업무에 있어서 자주 해결해야 하는 문제가 있어 일종의 패턴, 언어, 문법 등을 정의를 하고 대입하여 문제를 풀어내는 것.
    ex) 정규식
 - 반복되는 문제 패턴을 언어 또는 문법으로 정의하고 확장할 수 있다.


 Client

 Context : 모든 Expression에서 사용하는 공통된 정보

 <interface> Expression : interpret(Context)

 TerminalExpression : interPret(Context)
                        그 자체로 종료되는 Expression

NonTerminalExpression : interpret(Context)
                        다른 expressions를 참조하는. 재귀적으로 참조하는. 종료되지 않고 다른 Expression을 interpret을 해봐야
                        결과를 알 수 있는 Expression

xyz+-(123+-) x,y,z는 TerminalExpression. 그 자체로 값 리턴 가능.
            +, -는 NonTerminalExpression. 그 자체로 값 리턴 불가능. 다른 TerminalExpression 혹은 NonTerminalExpression의
            interpret 호출해봐야 결과 알 수 있음.

- 장점
    자주 등장하는 문제 패턴을 언어와 문법으로 정의할 수 있다.
    기존 코드를 변경하지 않고 새로운 Expression 추가할 수 있다.

- 단점
    복잡한 문법을 표현하라면 Expression과 Parser가 복잡해진다.