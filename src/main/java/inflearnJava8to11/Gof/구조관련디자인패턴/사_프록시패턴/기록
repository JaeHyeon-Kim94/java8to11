프록시 : 대리인

프록시 패턴 : 특정 객체에 대한 접근을 제어하거나 기능을 추가할 수 있는 패턴.

접근제어, lazy init, 로깅, 캐싱 등 중간에 프록시를 둠으로서 많은 이점을 챙길 수 있음.

client, Subject, RealSubject, Proxy


- 장점
    1. 기존 코드를 변경하지 않고 새로운 기능을 추가할 수 있음. (개방폐쇄원칙)
    2. 기존 코드가 해야 하는 일만 유지할 수 있다. (단일책임원칙)

- 단점
    1. 코드 복잡도 증가가


- 자바 : 다이나믹 프록시, java.lang.reflect.Proxy

- 스프링 : 스프링 AOP
