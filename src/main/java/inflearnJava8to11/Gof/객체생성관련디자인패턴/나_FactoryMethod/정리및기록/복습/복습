
팩토리 메소드 : 구체적으로 어떤 것을 만들지는 서브 클래스가 정한다.

- 팩토리 메소드 패턴을 적용했을 때의 장점과 단점은?
        >>장점 : Product와 Creator간의 관계를 느슨하게 함으로서. (decoupling)
            --> 요구사항의 변경에 있어서 기존의 소스를 수정하지 않고도 대응이 가능하다(유연성과 확장성)
                OCP(Open Closed Principle)에 부합한다.
                객체를 생성하는 공장이라는 중간 매개체를 통해 객체를 불러오기 때문에 객체를 한 곳에서 관리할 수 있다.
                재사용성, 간결한 코드

        >>단점 : 계속해서 하위 클래스를 정의해야 한다는 점에서 불필요한 클래스가 많이 생성될 수 있다.

- 확장에 열려있고 변경에 닫혀있는 객체 지향 원칙을 설명하세요.
        >> 기능의 추가/변경(확장) 가능. 이러한 추가/변경에 있어서 기존의 코드를 수정하지 않아도 됨.

- 자바 8에 추가된 default 메소드에 대해 설명하세요.
        >> 이전에는 인터페이스에는 항상 추상메서드만을 선언할 수 있었고,
           인터페이스를 구현하는 클래스에서 구현을 하거나 추상클래스를 통해 해결했었는데
           인터페이스를 구현하는 클래스들이 사용할 수 있는 기능을 인터페이스 안에 직접 구현할 수 있음. 기능을 추가할 때에도 유연한 구조.

           ++인터페이스의 private 메서드 추가학습.