추상팩토리 패턴 : 서로 관련있는 여러 객체를 만들어주는 인터페이스

- 구체적으로 어떤 클래스의 인스턴스를 사용하는지 감출 수 있다.

 - Abstract Factory Method pattern : 구체적인 팩토리에서 구체적인 인스턴스를 만드는것 까지는 팩토리 메서드 패턴과 유사하지만
                                        팩토리를 사용하는 클라이언트쪽에 초점이 맞춰져 있는 것.

팩토리 메서드 패턴이나 추상 팩토리 메서드 패턴 둘 다 객체를 만드는 과정을 추상화 한 것은 맞으나, 목적이 조금 다르다.


Factory Method Pattern
팩토리 메서드 패턴은 구체적인 객체 생성 과정을 하위 또는 구체적인 클래스로 옮기는 것이 목적.
구체적인 타입의 클래스 인스턴스를 만드는 과정을 구체적인 팩토리로 숨기고 그 위에 추상화되어있는 팩토리를 제공하는 것이 팩토리 메서드 패턴.
"팩토리를 구현하는 방법(inheritance)"

Abstract Factory Method Pattern
관련 있는 여러 객체를 구체적인 클래스에 의존하지 않고 만들 수 있게 해주는 것이 목적.
보는 관점을 다르게 해서 팩토리를 사용하는 쪽에서 바라보면, 팩토리를 통해서 추상화된 인터페이스만 클라이언트가 사용할 수 있게끔 해주기 때문에
클라이언트 입장에서는 구체적인 클래스(concrete class)를 직접 참조해서 쓸 필요가 없어진다.
"팩토리를 사용하는 방법(composition)"


